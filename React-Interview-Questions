Q1  Explain virtual dom and its role in React?
Ans.. The virtual DOM is the light weight javascript representation of (DOM) Document Object Model that react use to 
optimise how changes applied to the dom.
The Virtual DOM role in react is to improve performance by:-
1: Reducing Expensive DOM Opertaion :--- The virtual dom updated faster than actual dom. so react can make changes to the virtual DOM more
cheaply.

2: Identifed and Updating only affected Parts:---- When a component state changes react compare the new Virtual DOM tree to the previous one,
and only update the part that are different.

// Virtual DOM is Key React Features that enhance performance and efficient UI updates.



Q2  How does react handle event Handling?
Ans... Handling event in react is similar to handling event on Dom Elements
:--- React Event names as camelCase rather than Lowercase.
:--- With JSX you can pass a function as event handler, rather than string.
for example--

<button onclick ="activeLeaser()">
Active Leaser
</button>

is slightly different in React:-
<button onClick ={activateLeaser}>
Activate Leaser
</button>


Q3 How can we handle error in React?
Ans... There are different type of errors in React:-
1- Syntax Error
2- Reffernce Error
3- Type Error
4- Components lifecycle error

Error boundries were introduce in react v16 and to use them you need to define the class component within either or both of the following lifecycle method:-
getDerivedStateFromError() or componentDidCatch() :---this lifecycle method rendeers fallback UI after an error is thrown.



Q4 How does react handle component state and Props?
Ans... while both holds the information that influences the output and render they are different in one important way (similar to the function parameter)
where state is managed within the component (similar to the function within the function).


Q5  What is JSX?  
Ans...  Javascript XML (JSX) is a syntax extension for javascript that allow you to write a HTML code in react a Javascript Library.
JSX is similar to html , but it is stricker and can display dynamic information . It is extension of the javascript language on ES6.


Q6. What is ReactJS?
ReactJS is a JavaScript library used to build reusable components for the view layer in MVC architecture. It is highly efficient and uses a virtual DOM to render components. It works on the client side and is written in JSX.

Q7. Explain the MVC architecture.
The Model-View-Controller (MVC) framework is an architectural/design pattern that separates an application into three main logical components Model, View, and Controller. Each architectural component is built to handle specific development aspects of an application. It isolates the business, logic, and presentation layer from each other

Q8. Explain the building blocks of React.
The five main building blocks of React are:
Components: These are reusable blocks of code that return HTML.
JSX: It stands for JavaScript and XML and allows you to write HTML in React.
Props and State: props are like function parameters and State is similar to variables.
Context: This allows data to be passed through components as props in a hierarchy.
Virtual DOM: It is a lightweight copy of the actual DOM which makes DOM manipulation easier.


Q9. Explain props and state in React with differences
Props are used to pass data from one component to another. The state is local data storage that is local to the component only and cannot be passed to other components.

Here is the difference table of props and state In react

PROPS

STATE

The Data is passed from one component to another.	The Data is passed within the component only.
It is Immutable (cannot be modified).	It is Mutable ( can be modified).
Props can be used with state and functional components.	The state can be used only with the state components/class component (Before 16.0).
Props are read-only.	The state is both read and write.
Q11. What is virtual DOM in React?
React uses Virtual DOM which is like a lightweight copy of the actual DOM(a virtual representation of the DOM). So for every object that exists in the original DOM, there is an object for that in React Virtual DOM. It is the same, but it does not have the power to directly change the layout of the document. Manipulating DOM is slow, but manipulating Virtual DOM is fast as nothing gets drawn on the screen. So each time there is a change in the state of our application, the virtual DOM gets updated first instead of the real DOM.

Q10. What is JSX?
JSX is basically a syntax extension of regular JavaScript and is used to create React elements. These elements are then rendered to the React DOM. All the React components are written in JSX. To embed any JavaScript expression in a piece of code written in JSX we will have to wrap that expression in curly braces {}. 

Example of JSX: The name written in curly braces { } signifies JSX


const name = "Learner";

const element = (
  <h1>
    Hello,
    {name}.Welcome to GeeksforGeeks.
  </h1>
);
Q12. What are components and their type in React?
A Component is one of the core building blocks of React. In other words, we can say that every application you will develop in React will be made up of pieces called components. Components make the task of building UIs much easier. 

 In React, we mainly have two types of components: 

Functional Components: Functional components are simply javascript functions. We can create a functional component in React by writing a javascript function. 
Class Components: The class components are a little more complex than the functional components. The functional components are not aware of the other components in your program whereas the class components can work with each other. We can pass data from one class component to another class component.
Q13. How do browsers read JSX?
In general, browsers are not capable of reading JSX and only can read pure JavaScript. The web browsers read JSX with the help of a transpiler. Transpilers are used to convert JSX into JavaScript. The transpiler used is called Babel

Q14. Explain the steps to create a react application and print Hello World?
To install React, first, make sure Node is installed on your computer. After installing Node. Open the terminal and type the following command.

npx create-react-app <<Application_Name>>
Navigate to the folder.

cd <<Application_Name>>
This is the first code of ReactJS Hello World!


import React from "react";
import "./App.css";
function App() {
  return <div className="App">Hello World !</div>;
}
export default App;






1. What are the differences between Java and JavaScript? 
JavaScript is a client-side scripting language and Java is object Oriented Programming language. Both of them are totally different from each other.

JavaScript: It is a light-weighted programming language (“scripting language”) for developing interactive web pages. It can insert dynamic text into the HTML elements. JavaScript is also known as the browser’s language.
Java: Java is one of the most popular programming languages. It is an object-oriented programming language and has a virtual machine platform that allows you to create compiled programs that run on nearly every platform. Java promised, “Write Once, Run Anywhere”.
2. What are JavaScript Data Types? 
There are three major Data types in JavaScript.

Primitive
Numbers
Strings
Boolean
Symbol
Trivial
Undefined
Null
Composite
Objects
Functions
Arrays
3. Which symbol is used for comments in JavaScript? 
Comments prevent the execution of statements. Comments are ignored while the compiler executes the code. There are two type of symbols to represent comments in JavaScript:

Double slash: It is known as a single-line comment.
// Single line comment
Slash with Asterisk: It is known as a multi-line comment.
/* 
Multi-line comments
...
*/
4. What would be the result of 3+2+”7″?
 Here, 3 and 2 behave like an integer, and “7” behaves like a string. So 3 plus 2 will be 5. Then the output will be 5+”7″ = 57.

5. What is the use of the isNaN function?
 The number isNan function determines whether the passed value is NaN (Not a number) and is of the type “Number”. In JavaScript, the value NaN is considered a type of number. It returns true if the argument is not a number, else it returns false.

6. Which is faster in JavaScript and ASP script?
 JavaScript is faster compared to ASP Script. JavaScript is a client-side scripting language and does not depend on the server to execute. The ASP script is a server-side scripting language always dependable on the server.

7. What is negative infinity?
 The negative infinity is a constant value represents the lowest available value. It means that no other number is lesser than this value. It can be generate using a self-made function or by an arithmetic operation. JavaScript shows the NEGATIVE_INFINITY value as -Infinity.

8. Is it possible to break JavaScript Code into several lines?
 Yes, it is possible to break the JavaScript code into several lines in a string statement. It can be broken by using the backslash n ‘\n’. 
For example:

console.log("A Online Computer Science Portal\n for Geeks")
The code-breaking line is avoid by JavaScript which is not preferable.

let gfg= 10, GFG = 5,
Geeks =
gfg + GFG;
9. Which company developed JavaScript?
Netscape developed JavaScript and was created by Brenden Eich in the year of 1995.

10. What are undeclared and undefined variables?
Undefined: It occurs when a variable is declare but not assign any value. Undefined is not a keyword.
Undeclared: It occurs when we try to access any variable which is not initialize or declare earlier using the var or const keyword. If we use ‘typeof’ operator to get the value of an undeclare variable, we will face the runtime error with the return value as “undefined”. The scope of the undeclare variables is always global.
11. Write a JavaScript code for adding new elements dynamically. 

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Document</title>
</head>

<body>
    <button onclick="create()">
        Click Here!
    </button>

    <script>
        function create() {
            let geeks = document.createElement('geeks');
            geeks.textContent = "Geeksforgeeks";
            geeks.setAttribute('class', 'note');
            document.body.appendChild(geeks);
        }
    </script>
</body>
  
</html>
